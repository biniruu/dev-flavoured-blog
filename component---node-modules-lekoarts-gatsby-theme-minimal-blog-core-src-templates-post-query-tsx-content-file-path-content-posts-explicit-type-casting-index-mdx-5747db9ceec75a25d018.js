"use strict";(self.webpackChunkdev_flavoured_blog=self.webpackChunkdev_flavoured_blog||[]).push([[695],{4765:function(e,t,n){n.d(t,{F:function(){return p},Z:function(){return g}});var l=n(7294),r=n(8733),a=n(795),c=n(1322),o=n(6799),i=n(8871);var m=e=>{let{post:t}=e;return null};const s=["16px","8px","4px"].map((e=>"rgba(0, 0, 0, 0.1) 0px "+e+" "+e+" 0px"));var u=e=>{let{data:{post:t},children:n}=e;return(0,r.tZ)(c.Z,null,(0,r.tZ)(a.X6,{as:"h1",variant:"styles.h1"},t.title),(0,r.tZ)("p",{sx:{color:"secondary",mt:3,a:{color:"secondary"},fontSize:[1,1,2]}},(0,r.tZ)("time",null,t.date),t.tags&&(0,r.tZ)(l.Fragment,null," — ",(0,r.tZ)(o.Z,{tags:t.tags})),t.timeToRead&&" — ",t.timeToRead&&(0,r.tZ)("span",null,t.timeToRead," min read")),(0,r.tZ)("section",{sx:{my:5,".gatsby-resp-image-wrapper":{my:[4,4,5],borderRadius:"4px",boxShadow:s.join(", "),".gatsby-resp-image-image":{borderRadius:"4px"}},variant:"layout.content"}},n),(0,r.tZ)(m,{post:t}))};const p=e=>{var t,n,l;let{data:{post:a}}=e;return(0,r.tZ)(i.Z,{title:a.title,description:a.description?a.description:a.excerpt,image:a.banner?null===(t=a.banner)||void 0===t||null===(n=t.childImageSharp)||void 0===n||null===(l=n.resize)||void 0===l?void 0:l.src:void 0,pathname:a.slug,canonicalUrl:a.canonicalUrl})};function g(e){let{...t}=e;return l.createElement(u,t)}},6799:function(e,t,n){var l=n(8733),r=n(7294),a=n(1883),c=n(3494),o=n(9706);t.Z=e=>{let{tags:t}=e;const{tagsPath:n,basePath:i}=(0,c.Z)();return(0,l.tZ)(r.Fragment,null,t.map(((e,t)=>(0,l.tZ)(r.Fragment,{key:e.slug},!!t&&", ",(0,l.tZ)(a.Link,{sx:e=>{var t;return{...null===(t=e.styles)||void 0===t?void 0:t.a}},to:(0,o.Z)("/"+i+"/"+n+"/"+e.slug)},e.name)))))}},8871:function(e,t,n){var l=n(7294),r=n(1883),a=n(4232);t.Z=e=>{let{title:t="",description:n="",pathname:c="",image:o="",children:i=null,canonicalUrl:m=""}=e;const s=(0,a.Z)(),{siteTitle:u,siteTitleAlt:p,siteUrl:g,siteDescription:E,siteImage:d,author:y,siteLanguage:f}=s,v={title:t?t+" | "+u:p,description:n||E,url:""+g+(c||""),image:""+g+(o||d)};return l.createElement(l.Fragment,null,l.createElement("html",{lang:f}),l.createElement("title",null,v.title),l.createElement("meta",{name:"description",content:v.description}),l.createElement("meta",{name:"image",content:v.image}),l.createElement("meta",{property:"og:title",content:v.title}),l.createElement("meta",{property:"og:url",content:v.url}),l.createElement("meta",{property:"og:description",content:v.description}),l.createElement("meta",{property:"og:image",content:v.image}),l.createElement("meta",{property:"og:type",content:"website"}),l.createElement("meta",{property:"og:image:alt",content:v.description}),l.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),l.createElement("meta",{name:"twitter:title",content:v.title}),l.createElement("meta",{name:"twitter:url",content:v.url}),l.createElement("meta",{name:"twitter:description",content:v.description}),l.createElement("meta",{name:"twitter:image",content:v.image}),l.createElement("meta",{name:"twitter:image:alt",content:v.description}),l.createElement("meta",{name:"twitter:creator",content:y}),l.createElement("meta",{name:"gatsby-theme",content:"@lekoarts/gatsby-theme-minimal-blog"}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"32x32",href:(0,r.withPrefix)("/favicon-32x32.png")}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"16x16",href:(0,r.withPrefix)("/favicon-16x16.png")}),l.createElement("link",{rel:"apple-touch-icon",sizes:"180x180",href:(0,r.withPrefix)("/apple-touch-icon.png")}),m?l.createElement("link",{rel:"canonical",href:m}):null,i)}},6432:function(e,t,n){n.r(t),n.d(t,{Head:function(){return o.F},default:function(){return i}});var l=n(7294),r=n(1151);function a(e){const t=Object.assign({h2:"h2",p:"p",code:"code",pre:"pre"},(0,r.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.h2,null,"사건의 발단"),"\n",l.createElement(t.p,null,"다음 코드에서 ",l.createElement(t.code,null,"string")," 타입인 값을 변수에 할당했는데도 ",l.createElement(t.code,null,"string"),"이 아닌 다른 타입이 할당되는 경우가 발생했어요.😭"),"\n",l.createElement("br"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-typescript"},"const user = {\n  username: 'John',\n  isAdmin: false,\n  createdAt: new Date(),\n}\n\nfor (const key in user) {\n  const newKey = key as keyof typeof user\n  const isString = typeof user[newKey] === 'string'\n\n  // 타입스크립트는 value의 타입을 string | boolean | Date 로 추론해요\n  const value = isString ? user[newKey] : user[newKey].toString()\n  console.log(typeof value) // string\n}\n")),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"위 코드에서 ",l.createElement(t.code,null,"value")," 변수의 타입은 분명히 ",l.createElement(t.code,null,"string"),"이에요."),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"user[newKey]"),"의 타입이 ",l.createElement(t.code,null,"string"),"이라면 ",l.createElement(t.code,null,"user[newKey]"),"를 그대로 ",l.createElement(t.code,null,"value"),"에 할당하고, ",l.createElement(t.code,null,"boolean"),"이나 ",l.createElement(t.code,null,"Date"),"라면 ",l.createElement(t.code,null,"toString"),"으로 타입을 변환한 다음 할당하기 때문이에요."),"\n",l.createElement(t.p,null,"실제로 ",l.createElement(t.code,null,"console.log"),"를 사용해 ",l.createElement(t.code,null,"value"),"의 타입을 확인해 보면 모두 ",l.createElement(t.code,null,"string")," 타입으로 나와요."),"\n",l.createElement("br"),"\n",l.createElement(t.h2,null,"원인 규명"),"\n",l.createElement(t.p,null,"그런데 말입니다."),"\n",l.createElement(t.p,null,"타입스크립트는 ",l.createElement(t.code,null,"value"),"의 타입을 ",l.createElement(t.code,null,"string | boolean | Date"),"로 추론해요."),"\n",l.createElement(t.p,null,"왜 그럴까요?🤷🏻‍♀️"),"\n",l.createElement(t.p,null,"이 문제는 사람이 논리적으로 사고하는 방식과 타입스크립트가 타입을 추론하는 방식이 다르기 때문에 발생해요."),"\n",l.createElement(t.p,null,"사람은 아래 코드에서 ",l.createElement(t.code,null,"user[newKey]"),"가 ",l.createElement(t.code,null,"string"),"임을 파악할 수 있어요."),"\n",l.createElement("br"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-typescript"},"const isString = typeof user[newKey] === 'string'\nconst value = isString ? user[newKey] : user[newKey].toString()\n")),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"user[newKey]"),"의 타입이 ",l.createElement(t.code,null,"string"),"임을 ",l.createElement(t.code,null,"isString"),"으로 확인했기 때문에 ",l.createElement(t.code,null,"value"),"에 할당하는 ",l.createElement(t.code,null,"user[newKey]"),"의 타입을 굳이 ",l.createElement(t.code,null,"string"),"으로 변환할 필요가 없으니까요."),"\n",l.createElement(t.p,null,"그렇지만 위 코드에서 ",l.createElement(t.code,null,"newKey"),"의 타입을 ",l.createElement(t.code,null,"keyof typeof user"),"으로 assertion 했기 때문에 타입스크립트는 사람과 달리 ",l.createElement(t.code,null,"user[newKey]"),"를 무조건 ",l.createElement(t.code,null,"string | boolean | Date"),"로 추론해요."),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"isString"),"이 ",l.createElement(t.code,null,"true"),"라면 ",l.createElement(t.code,null,"user[newKey]"),"를 그대로 ",l.createElement(t.code,null,"value"),"에 할당하니, 타입스크립트로서는 그렇게 판단할 수밖에 없죠."),"\n",l.createElement(t.p,null,"그러니 이 문제를 해결하려면 ",l.createElement(t.code,null,"isString"),"이 ",l.createElement(t.code,null,"true"),"일 때 ",l.createElement(t.code,null,"value"),"에 할당하는 ",l.createElement(t.code,null,"user[newKey]"),"의 타입을 수동으로 지정해야 해요."),"\n",l.createElement("br"),"\n",l.createElement(t.h2,null,"사건 해결"),"\n",l.createElement(t.p,null,"아래 코드와 같이 ",l.createElement(t.code,null,"user[newKey]"),"의 타입을 ",l.createElement(t.code,null,"string"),"으로 assertion 하니 문제가 해결됐어요!!"),"\n",l.createElement("br"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-typescript"},"// 이제 타입스크립트도 value의 타입을 string으로 추론해요\nconst value = isString ? (user[newKey] as string) : user[newKey].toString()\nconsole.log(typeof value) // string\n")),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"다음은 수정을 마친 전체 코드예요."),"\n",l.createElement("br"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-typescript"},"const user = {\n  username: 'John',\n  isAdmin: false,\n  createdAt: new Date(),\n}\n\nfor (const key in user) {\n  const newKey = key as keyof typeof user\n  const isString = typeof user[newKey] === 'string'\n  const value = isString ? (user[newKey] as string) : user[newKey].toString()\n  console.log(typeof value)\n}\n")))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?l.createElement(t,e,l.createElement(a,e)):a(e)},o=n(4765);function i(e){return l.createElement(o.Z,e,l.createElement(c,e))}o.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-explicit-type-casting-index-mdx-5747db9ceec75a25d018.js.map