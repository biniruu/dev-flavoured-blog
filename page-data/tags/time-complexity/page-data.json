{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx","path":"/tags/time-complexity","result":{"data":{"allPost":{"nodes":[{"slug":"/코딩-테스트-합격자-되기-학습-3-장-알고리즘의-효율-분석","title":"<코딩 테스트 합격자 되기 학습> 3장. 알고리즘의 효율 분석","date":"02.01.2024","excerpt":"빠른 시간 내로 연산을 마쳐야 하는 알고리즘을 선택할 때는 시간 복잡도가 낮은 것을 선택해야 한다. 시간 복잡도란 알고리즘이 시작할때 부터 끝날 때까지의 연산 횟수를 나타낸다. 빅오 표기법은 시간 복잡도 중 최악의 상황만을 표기하는 방법이다.","timeToRead":1,"description":"빠른 계산을 필요로 하는 알고리즘을 선택할 때 알아야 할 것.","tags":[{"name":"algorithm","slug":"algorithm"},{"name":"time complexity","slug":"time-complexity"},{"name":"big o notation","slug":"big-o-notation"},{"name":"study","slug":"study"}]}]}},"pageContext":{"slug":"time-complexity","name":"time complexity","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2421966660","2744905544","3090400250"],"slicesMap":{}}