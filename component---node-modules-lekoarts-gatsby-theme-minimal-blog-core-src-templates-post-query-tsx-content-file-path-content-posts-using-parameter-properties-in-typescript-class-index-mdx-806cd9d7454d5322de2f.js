"use strict";(self.webpackChunkdev_flavoured_blog=self.webpackChunkdev_flavoured_blog||[]).push([[267],{4765:function(e,t,n){n.d(t,{F:function(){return u},Z:function(){return d}});var r=n(7294),l=n(8733),a=n(795),c=n(1322),o=n(6799),i=n(8871);var s=e=>{let{post:t}=e;return null};const m=["16px","8px","4px"].map((e=>"rgba(0, 0, 0, 0.1) 0px "+e+" "+e+" 0px"));var p=e=>{let{data:{post:t},children:n}=e;return(0,l.tZ)(c.Z,null,(0,l.tZ)(a.X6,{as:"h1",variant:"styles.h1"},t.title),(0,l.tZ)("p",{sx:{color:"secondary",mt:3,a:{color:"secondary"},fontSize:[1,1,2]}},(0,l.tZ)("time",null,t.date),t.tags&&(0,l.tZ)(r.Fragment,null," — ",(0,l.tZ)(o.Z,{tags:t.tags})),t.timeToRead&&" — ",t.timeToRead&&(0,l.tZ)("span",null,t.timeToRead," min read")),(0,l.tZ)("section",{sx:{my:5,".gatsby-resp-image-wrapper":{my:[4,4,5],borderRadius:"4px",boxShadow:m.join(", "),".gatsby-resp-image-image":{borderRadius:"4px"}},variant:"layout.content"}},n),(0,l.tZ)(s,{post:t}))};const u=e=>{var t,n,r;let{data:{post:a}}=e;return(0,l.tZ)(i.Z,{title:a.title,description:a.description?a.description:a.excerpt,image:a.banner?null===(t=a.banner)||void 0===t||null===(n=t.childImageSharp)||void 0===n||null===(r=n.resize)||void 0===r?void 0:r.src:void 0,pathname:a.slug,canonicalUrl:a.canonicalUrl})};function d(e){let{...t}=e;return r.createElement(p,t)}},6799:function(e,t,n){var r=n(8733),l=n(7294),a=n(1883),c=n(3494),o=n(9706);t.Z=e=>{let{tags:t}=e;const{tagsPath:n,basePath:i}=(0,c.Z)();return(0,r.tZ)(l.Fragment,null,t.map(((e,t)=>(0,r.tZ)(l.Fragment,{key:e.slug},!!t&&", ",(0,r.tZ)(a.Link,{sx:e=>{var t;return{...null===(t=e.styles)||void 0===t?void 0:t.a}},to:(0,o.Z)("/"+i+"/"+n+"/"+e.slug)},e.name)))))}},8871:function(e,t,n){var r=n(7294),l=n(1883),a=n(4232);t.Z=e=>{let{title:t="",description:n="",pathname:c="",image:o="",children:i=null,canonicalUrl:s=""}=e;const m=(0,a.Z)(),{siteTitle:p,siteTitleAlt:u,siteUrl:d,siteDescription:E,siteImage:g,author:h,siteLanguage:f}=m,v={title:t?t+" | "+p:u,description:n||E,url:""+d+(c||""),image:""+d+(o||g)};return r.createElement(r.Fragment,null,r.createElement("html",{lang:f}),r.createElement("title",null,v.title),r.createElement("meta",{name:"description",content:v.description}),r.createElement("meta",{name:"image",content:v.image}),r.createElement("meta",{property:"og:title",content:v.title}),r.createElement("meta",{property:"og:url",content:v.url}),r.createElement("meta",{property:"og:description",content:v.description}),r.createElement("meta",{property:"og:image",content:v.image}),r.createElement("meta",{property:"og:type",content:"website"}),r.createElement("meta",{property:"og:image:alt",content:v.description}),r.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),r.createElement("meta",{name:"twitter:title",content:v.title}),r.createElement("meta",{name:"twitter:url",content:v.url}),r.createElement("meta",{name:"twitter:description",content:v.description}),r.createElement("meta",{name:"twitter:image",content:v.image}),r.createElement("meta",{name:"twitter:image:alt",content:v.description}),r.createElement("meta",{name:"twitter:creator",content:h}),r.createElement("meta",{name:"gatsby-theme",content:"@lekoarts/gatsby-theme-minimal-blog"}),r.createElement("link",{rel:"icon",type:"image/png",sizes:"32x32",href:(0,l.withPrefix)("/favicon-32x32.png")}),r.createElement("link",{rel:"icon",type:"image/png",sizes:"16x16",href:(0,l.withPrefix)("/favicon-16x16.png")}),r.createElement("link",{rel:"apple-touch-icon",sizes:"180x180",href:(0,l.withPrefix)("/apple-touch-icon.png")}),s?r.createElement("link",{rel:"canonical",href:s}):null,i)}},2598:function(e,t,n){n.r(t),n.d(t,{Head:function(){return o.F},default:function(){return i}});var r=n(7294),l=n(1151);function a(e){const t=Object.assign({p:"p",code:"code",pre:"pre",h2:"h2",strong:"strong",ul:"ul",li:"li",a:"a"},(0,l.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.p,null,"다음 클래스의 코드를 볼까요. ",r.createElement(t.code,null,"constructor")," 함수의 parameter 안에서 ",r.createElement(t.code,null,"private")," modifier를 사용하여 선언한 멤버 변수에 ",r.createElement(t.code,null,"this")," 없이 접근하는 것을 볼 수 있어요."),"\n",r.createElement("br"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-typescript"},"abstract class Component<T extends HTMLElement, U extends HTMLElement> {\n  templateElement: HTMLTemplateElement\n  hostElement: T\n  element: U\n\n  constructor(\n    private templateId: string,\n    private hostElementId: string,\n    private insertAtStart: boolean,\n    private newElementId?: string,\n  ) {\n    this.templateElement = document.getElementById(templateId)! as HTMLTemplateElement\n    this.hostElement = document.getElementById(hostElementId)! as T\n\n    const importedNode = document.importNode(this.templateElement.content, true)\n    this.element = importedNode.firstElementChild as U\n    if (newElementId) this.element.id = newElementId\n\n    this.attach(insertAtStart)\n  }\n\n  private attach(insertAtBeginning: boolean) {\n    this.hostElement.insertAdjacentElement(insertAtBeginning ? 'afterbegin' : 'beforeend', this.element)\n  }\n\n  abstract configure(): void\n  abstract renderContent(): void\n}\n")),"\n",r.createElement("br"),"\n",r.createElement(t.h2,null,"이게 어떻게 가능할까?"),"\n",r.createElement(t.p,null,"이는 타입스크립트만의 특성이며, 자바스크립트에서는 허용되지 않아요. 타입스크립트에서만 멤버 변수를 ",r.createElement(t.code,null,"constructor"),"의 parameter에서 ",r.createElement(t.code,null,"private")," , ",r.createElement(t.code,null,"protect")," , ",r.createElement(t.code,null,"public")," , ",r.createElement(t.code,null,"readonly")," 같은 modifier를 사용하여 직접 선언할 수 있거든요."),"\n",r.createElement(t.p,null,"이를 ",r.createElement(t.strong,null,"parameter properties"),"라고 해요."),"\n",r.createElement(t.p,null,"parameter properties를 사용하면 ",r.createElement(t.code,null,"constructor")," 안에서는 parameter property에 ",r.createElement(t.code,null,"this")," 없이 직접 접근할 수 있어요. 이는 ",r.createElement(t.code,null,"constructor"),"가 함수와 유사하게 동작하기 때문인 듯해요."),"\n",r.createElement(t.p,null,"그러나 ",r.createElement(t.code,null,"contructor")," 밖에서 선언한 멤버 변수에 접근할 때는 ",r.createElement(t.code,null,"this"),"를 꼭 사용해야 해요. ",r.createElement(t.code,null,"constructor")," 안에서 선언한 멤버 변수라고 해도 ",r.createElement(t.code,null,"constructor")," 밖에서는 ",r.createElement(t.code,null,"this"),"를 사용해야 하고요."),"\n",r.createElement("br"),"\n",r.createElement(t.h2,null,"다른 예시"),"\n",r.createElement(t.p,null,"아래 ",r.createElement(t.code,null,"ProjectList")," 클래스에서도 마찬가지로 ",r.createElement(t.code,null,"constructor")," 안에서 ",r.createElement(t.code,null,"private")," modifier와 함께 선언한 멤버 변수 ",r.createElement(t.code,null,"type"),"을 ",r.createElement(t.code,null,"super"),"에서 직접 접근하고 있어요. 그러나 ",r.createElement(t.code,null,"constructor")," 밖에서 선언한 멤버 변수에 접근할 때 또는 ",r.createElement(t.code,null,"constructor")," 밖에서 멤버 변수에 접근할 때는 ",r.createElement(t.code,null,"this"),"를 사용하지 않는 것을 확인할 수 있어요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-typescript"},"class ProjectList extends Component<HTMLDivElement, HTMLElement> {\n  private assignedProjects: Project[] = []\n\n  constructor(private type: 'active' | 'finished') {\n    super('project-list', 'app', false, `${type}-projects`)\n\n    this.configure()\n    this.renderContent()\n  }\n\n  configure() {\n    projectState.addListener((projects: Project[]) => {\n      const relevantProjects = projects.filter(project => project.status === ProjectStatus[this.type])\n      this.assignedProjects = relevantProjects\n      this.renderProjects()\n    })\n  }\n\n  renderContent() {\n    const listId = `${this.type}-projects-list`\n    this.element.querySelector('ul')!.id = listId\n    this.element.querySelector('h2')!.textContent = this.type.toUpperCase() + ' PROJECTS'\n  }\n\n  private renderProjects() {\n    const listEl = document.getElementById(`${this.type}-projects-list`)! as HTMLUListElement\n    listEl.innerHTML = ''\n    for (const projectItem of this.assignedProjects) {\n      const listItem = document.createElement('li')\n      listItem.textContent = projectItem.title\n      listEl.appendChild(listItem)\n    }\n  }\n}\n")),"\n",r.createElement("br"),"\n",r.createElement(t.h2,null,"참고 자료"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.a,{href:"https://www.typescriptlang.org/docs/handbook/2/classes.html#constructors"},"Constructors")),"\n",r.createElement(t.li,null,r.createElement(t.a,{href:"https://www.typescriptlang.org/docs/handbook/2/classes.html#parameter-properties"},"Parameter Properties")),"\n"))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?r.createElement(t,e,r.createElement(a,e)):a(e)},o=n(4765);function i(e){return r.createElement(o.Z,e,r.createElement(c,e))}o.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-using-parameter-properties-in-typescript-class-index-mdx-806cd9d7454d5322de2f.js.map