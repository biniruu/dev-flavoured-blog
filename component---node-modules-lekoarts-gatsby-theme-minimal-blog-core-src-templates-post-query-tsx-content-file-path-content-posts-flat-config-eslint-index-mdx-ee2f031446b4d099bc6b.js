"use strict";(self.webpackChunkdev_flavoured_blog=self.webpackChunkdev_flavoured_blog||[]).push([[123],{4765:function(e,t,n){n.d(t,{F:function(){return p},Z:function(){return g}});var l=n(7294),r=n(8733),a=n(795),i=n(1322),s=n(6799),o=n(8871);var c=e=>{let{post:t}=e;return null};const m=["16px","8px","4px"].map((e=>"rgba(0, 0, 0, 0.1) 0px "+e+" "+e+" 0px"));var u=e=>{let{data:{post:t},children:n}=e;return(0,r.tZ)(i.Z,null,(0,r.tZ)(a.X6,{as:"h1",variant:"styles.h1"},t.title),(0,r.tZ)("p",{sx:{color:"secondary",mt:3,a:{color:"secondary"},fontSize:[1,1,2]}},(0,r.tZ)("time",null,t.date),t.tags&&(0,r.tZ)(l.Fragment,null," — ",(0,r.tZ)(s.Z,{tags:t.tags})),t.timeToRead&&" — ",t.timeToRead&&(0,r.tZ)("span",null,t.timeToRead," min read")),(0,r.tZ)("section",{sx:{my:5,".gatsby-resp-image-wrapper":{my:[4,4,5],borderRadius:"4px",boxShadow:m.join(", "),".gatsby-resp-image-image":{borderRadius:"4px"}},variant:"layout.content"}},n),(0,r.tZ)(c,{post:t}))};const p=e=>{var t,n,l;let{data:{post:a}}=e;return(0,r.tZ)(o.Z,{title:a.title,description:a.description?a.description:a.excerpt,image:a.banner?null===(t=a.banner)||void 0===t||null===(n=t.childImageSharp)||void 0===n||null===(l=n.resize)||void 0===l?void 0:l.src:void 0,pathname:a.slug,canonicalUrl:a.canonicalUrl})};function g(e){let{...t}=e;return l.createElement(u,t)}},6799:function(e,t,n){var l=n(8733),r=n(7294),a=n(1883),i=n(3494),s=n(9706);t.Z=e=>{let{tags:t}=e;const{tagsPath:n,basePath:o}=(0,i.Z)();return(0,l.tZ)(r.Fragment,null,t.map(((e,t)=>(0,l.tZ)(r.Fragment,{key:e.slug},!!t&&", ",(0,l.tZ)(a.Link,{sx:e=>{var t;return{...null===(t=e.styles)||void 0===t?void 0:t.a}},to:(0,s.Z)("/"+o+"/"+n+"/"+e.slug)},e.name)))))}},8871:function(e,t,n){var l=n(7294),r=n(1883),a=n(4232);t.Z=e=>{let{title:t="",description:n="",pathname:i="",image:s="",children:o=null,canonicalUrl:c=""}=e;const m=(0,a.Z)(),{siteTitle:u,siteTitleAlt:p,siteUrl:g,siteDescription:E,siteImage:d,author:f,siteLanguage:h}=m,b={title:t?t+" | "+u:p,description:n||E,url:""+g+(i||""),image:""+g+(s||d)};return l.createElement(l.Fragment,null,l.createElement("html",{lang:h}),l.createElement("title",null,b.title),l.createElement("meta",{name:"description",content:b.description}),l.createElement("meta",{name:"image",content:b.image}),l.createElement("meta",{property:"og:title",content:b.title}),l.createElement("meta",{property:"og:url",content:b.url}),l.createElement("meta",{property:"og:description",content:b.description}),l.createElement("meta",{property:"og:image",content:b.image}),l.createElement("meta",{property:"og:type",content:"website"}),l.createElement("meta",{property:"og:image:alt",content:b.description}),l.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),l.createElement("meta",{name:"twitter:title",content:b.title}),l.createElement("meta",{name:"twitter:url",content:b.url}),l.createElement("meta",{name:"twitter:description",content:b.description}),l.createElement("meta",{name:"twitter:image",content:b.image}),l.createElement("meta",{name:"twitter:image:alt",content:b.description}),l.createElement("meta",{name:"twitter:creator",content:f}),l.createElement("meta",{name:"gatsby-theme",content:"@lekoarts/gatsby-theme-minimal-blog"}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"32x32",href:(0,r.withPrefix)("/favicon-32x32.png")}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"16x16",href:(0,r.withPrefix)("/favicon-16x16.png")}),l.createElement("link",{rel:"apple-touch-icon",sizes:"180x180",href:(0,r.withPrefix)("/apple-touch-icon.png")}),c?l.createElement("link",{rel:"canonical",href:c}):null,o)}},820:function(e,t,n){n.r(t),n.d(t,{Head:function(){return s.F},default:function(){return o}});var l=n(7294),r=n(1151);function a(e){const t=Object.assign({blockquote:"blockquote",p:"p",code:"code",h2:"h2",h3:"h3",pre:"pre",a:"a",strong:"strong",ul:"ul",li:"li"},(0,r.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"⚠️이 문서는 계속 업데이트 될 예정이에요. flat config를 지원하지 않는 eslint-plugin-import 같은 패키지가 있기 때문에 저도 아직 이 설정을 완전하게 만들어서 사용해 본 적이 없거든요."),"\n"),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"eslint는 9 버전부터 이전 설정 방식인 '.eslintrc.js', '.eslintrc.json'를 사용할 수 없게 되었어요. 오직 'flat config'라고 불리는 'eslint.config.js'만 사용할 수 있게 되었죠."),"\n",l.createElement(t.p,null,"이러한 변경과 함께 '.eslintignore' 파일도 사용할 수 없게 됐어요. 이제는 'eslint.config.js' 안에서 ",l.createElement(t.code,null,"ignores")," 옵션으로만 사용할 수 있어요."),"\n",l.createElement(t.p,null,"그러면 새로운 설정 파일은 어떻게 구성해야 하는지 알아볼까요."),"\n",l.createElement("br"),"\n",l.createElement(t.h2,null,"새로운 설정파일 구성 방법"),"\n",l.createElement(t.p,null,"가장 눈에 띄는 변경사항이라고 한다면, flat config에서는 의존성 패키지를 일일이 ",l.createElement(t.code,null,"import"),"해야 한다는 점이에요."),"\n",l.createElement(t.p,null,"이외에도 제가 실제로 flat config를 설정해보면서 확인한 점을 정리했어요."),"\n",l.createElement("br"),"\n",l.createElement(t.h3,null,"파일명"),"\n",l.createElement(t.p,null,"앞서 설명한 바와 같이 파일명은 (일반적으로) 'eslint.config.js'로만 쓸 수 있어요. '.eslintrc.js'나 '.eslintrc.json'는 사용할 수 없어요."),"\n",l.createElement("br"),"\n",l.createElement(t.h3,null,"export 데이터 타입"),"\n",l.createElement(t.p,null,"eslint 설정 파일이 ",l.createElement(t.code,null,"export")," 하는 타입이 객체에서 배열로 바뀌었어요."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"// .eslintrc.js\n\nexport default {\n  ...\n}\n")),"\n",l.createElement("br"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"// eslint.config.js\n\nexport default [\n  ...\n]\n")),"\n",l.createElement("br"),"\n",l.createElement(t.h3,null,"eslint 추천 설정"),"\n",l.createElement(t.p,null,"eslint 추천 설정을 사용하기 위해 '@eslint/js' 패키지를 설치해야 해요."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"import eslint from '@eslint/js'\n\nexport default [\n  eslint.configs.recommended,\n  {\n    rules: {\n      ...\n    }\n  }\n]\n")),"\n",l.createElement("br"),"\n",l.createElement(t.h3,null,"typescript-eslint 패키지 변경"),"\n",l.createElement(t.p,null,"기존에 사용하던 '@typescript-eslint/eslint-plugin'와 '@typescript-eslint/parser' 대신 'typescript-eslint'를 사용해야 해요."),"\n",l.createElement(t.p,null,"'typescript-eslint'의 ",l.createElement(t.code,null,"config"),"를 export하도록 수정할 필요도 있고요."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"import tslint from 'typescript-eslint'\n\nexport default tslint.config(\n  // tslint.configs.recommended의 타입이 배열이기 때문에 전개 구문 사용\n  ...tslint.configs.recommended,\n)\n")),"\n",l.createElement("br"),"\n",l.createElement(t.h3,null,"overrides 사용 방식 변경"),"\n",l.createElement(t.p,null,"특정 설정을 기존 설정에 덮어쓰기 위해 사용하는 ",l.createElement(t.code,null,"overrides")," 옵션을 사용하는 방식이 '설정 배열'의 객체 아이템으로 사용하는 방식으로 변경되었어요."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"// .eslintrc.js\n\nexport default {\n  overrides: [\n    {\n      extends: ['plugin:jest/recommended', 'plugin:jest-dom/recommended'],\n      files: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(spec|test).[jt]s?(x)'],\n      rules: {\n        ...\n      },\n    },\n  ],\n}\n")),"\n",l.createElement("br"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"// eslint.config.js\n\nimport eslintPluginJest from 'eslint-plugin-jest'\n\nexport default [\n  {\n    files: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(spec|test).[jt]s?(x)'],\n    ...eslintPluginJest.configs['flat/recommended'], // extends 옵션을 이렇게 전개 구문으로 설정할 수도 있어요\n    rules: {\n      ...eslintPluginJest.rules,\n    },\n  },\n]\n")),"\n",l.createElement("br"),"\n",l.createElement(t.h3,null,"languageOptions 옵션으로 대체되는 옵션들"),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"env"),", ",l.createElement(t.code,null,"globals"),", ",l.createElement(t.code,null,"parser")," 옵션 등이 ",l.createElement(t.code,null,"languageOptions")," 옵션의 하위 옵션으로 들어가요. 특히 ",l.createElement(t.code,null,"env"),"는 ",l.createElement(t.code,null,"globals")," 옵션에 포함되고, ",l.createElement(t.code,null,"env")," 옵션 자체는 사라져요."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"// .eslintrc.js\n\nexport default {\n  env: {\n    browser: true,\n    es6: true,\n    node: true,\n    'jest/globals': true,\n  },\n  globals: {\n    myCustomGlobal: 'readonly',\n  },\n  parser: '@typescript-eslint/parser',\n  parserOptions: {\n    project: true,\n    tsconfigRootDir: __dirname,\n  },\n}\n")),"\n",l.createElement("br"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"// eslint.config.js\n\nimport path from 'path'\nimport globals from 'globals'\nimport { fileURLToPath } from 'url'\n\nconst __filename = fileURLToPath(import.meta.url)\nconst __dirname = path.dirname(__filename)\n\nexport default tslint.config({\n  languageOptions: {\n    globals: {\n      ...globals.node,\n      ...globals.browser,\n      ...globals.es5,\n      ...globals.jest,\n      myCustomGlobal: 'readonly',\n    },\n    parser: tslint.parser,\n    parserOptions: {\n      project: true,\n      tsconfigRootDir: __dirname,\n    },\n  },\n})\n")),"\n",l.createElement("br"),"\n",l.createElement(t.h3,null,"ignore 파일 추가"),"\n",l.createElement(t.p,null,"위에서 언급한 대로 ",l.createElement(t.code,null,".eslintignore")," 파일은 더 이상 사용할 수 없어요. 대신 ",l.createElement(t.code,null,"ignores")," 옵션만 사용할 수 있어요."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"export default [\n  {\n    ignores: ['tsconfig.json', 'node_modules', 'dist'],\n  },\n]\n")),"\n",l.createElement("br"),"\n",l.createElement(t.h2,null,"에러 해결"),"\n",l.createElement(t.p,null,"아무래도 이제 막 시스템이 변경되었다 보니 에러가 발생할 가능성이 높은 편이에요. 이럴 때를 대비에서 eslint 공식 홈페이지에서도 관련 문서를 제공하고 있어요."),"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"https://typescript-eslint.io/troubleshooting/"},"eslint Troubleshooting & FAQs")),"\n",l.createElement(t.p,null,"다음은 제가 직접 겪었던 에러와 해결 방법이에요."),"\n",l.createElement("br"),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"여기서부터는 flat config를 지원하지 않는 eslint-plugin-import를 flat config에 억지로 반영한 결과예요. 실제 이 방식으로 에러를 해결하기는 했지만, eslint-plugin-import는 동작하지 않았어요. 그저 해당 에러가 발생했을 때 이런 방식으로 해결할 수도 있다고만 이해해주세요."),"\n"),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"에러: ",l.createElement(t.strong,null,"TypeError: context.getScope is not a function")),"\n",l.createElement(t.p,null,"이 에러가 발생했을 때 '@eslint/compat' 패키지를 설치한 후에, 에러가 발생하는 플러그인을 ",l.createElement(t.code,null,"fixupPluginRules"),"의 인자로 넘겨서 설정했어요."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-javascript"},"import { fixupPluginRules } from '@eslint/compat'\nimport eslintPluginImport from 'eslint-plugin-import'\n\nexport default [\n  {\n    plugins: {\n      eslintPluginImport: fixupPluginRules(eslintPluginImport),\n    },\n  },\n]\n")),"\n",l.createElement("br"),"\n",l.createElement(t.h2,null,"참고 자료"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://eslint.org/blog/2024/05/eslint-compatibility-utilities/"},"Introducing ESLint Compatibility Utilities")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://eslint.org/blog/2022/08/new-config-system-part-1/"},"ESLint's new config system, Part 1: Background")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://eslint.org/blog/2022/08/new-config-system-part-2/"},"ESLint's new config system, Part 2: Introduction to flat config")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://eslint.org/docs/latest/use/configure/migration-guide"},"Configuration Migration Guide")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://eslint.org/docs/latest/use/configure/migration-guide#using-eslintrc-configs-in-flat-config"},"Using eslintrc Configs in Flat Config")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://eslint.org/docs/latest/use/configure/migration-guide#configuring-language-options"},"eslint Configuring Language Options")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://typescript-eslint.io/troubleshooting/"},"eslint Troubleshooting & FAQs")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://typescript-eslint.io/getting-started/"},"typescript-eslint Getting Started")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://typescript-eslint.io/packages/typescript-eslint/"},"typescript-eslint configurations")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://typescript-eslint.io/packages/typescript-eslint/#usage"},"typescript-eslint Recommended Configurations")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://eslint.org/docs/latest/use/configure/ignore#ignoring-files"},"typescript-eslint Ignoring Files")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://eslint.org/docs/latest/use/configure/migration-guide#ignoring-files"},"typescript-eslint Ignoring Files (migration)")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://github.com/eslint/rewrite/tree/main/packages/compat#eslint-compatibility-utilities"},"@eslint/compat documentation")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://github.com/eslint/eslintrc?tab=readme-ov-file#eslintrc-library"},"eslintrc documentation")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://typescript-eslint.io/troubleshooting/#i-get-errors-telling-me-eslint-was-configured-to-run--however-that-tsconfig-does-not--none-of-those-tsconfigs-include-this-file"},'I get errors telling me "ESLint was configured to run ... However, that TSConfig does not / none of those TSConfigs include this file"')),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://eslint.org/docs/latest/use/troubleshooting/v9-rule-api-changes"},"TypeError: context.getScope is not a function")),"\n"))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?l.createElement(t,e,l.createElement(a,e)):a(e)},s=n(4765);function o(e){return l.createElement(s.Z,e,l.createElement(i,e))}s.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-flat-config-eslint-index-mdx-ee2f031446b4d099bc6b.js.map