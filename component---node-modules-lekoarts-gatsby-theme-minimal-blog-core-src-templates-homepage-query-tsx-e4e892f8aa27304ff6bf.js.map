{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-e4e892f8aa27304ff6bf.js","mappings":"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","sources":["webpack://dev-flavoured-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://dev-flavoured-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components), {Text} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    children: `ì•—ðŸ‘€ ì˜¤ì…¨ì–´ìš”`,\n    sx: {\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"í•„ìš”í•œ ê²ƒë§Œ ë¹ ë¥´ê²Œ ë§›ë³´ì„¸ìš”. ì§§ê²Œ ì¤€ë¹„í–ˆë‹µë‹ˆë‹¤.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { HeadFC, Link } from 'gatsby'\nimport Layout from '@lekoarts/gatsby-theme-minimal-blog/src/components/layout'\nimport Title from '@lekoarts/gatsby-theme-minimal-blog/src/components/title'\nimport Listing from '@lekoarts/gatsby-theme-minimal-blog/src/components/listing'\nimport List from '@lekoarts/gatsby-theme-minimal-blog/src/components/list'\nimport useMinimalBlogConfig from '@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config'\nimport useSiteMetadata from '@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata'\nimport replaceSlashes from '@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes'\nimport { visuallyHidden } from '@lekoarts/gatsby-theme-minimal-blog/src/styles/utils'\nimport Seo from '@lekoarts/gatsby-theme-minimal-blog/src/components/seo'\nimport Hero from '@lekoarts/gatsby-theme-minimal-blog/src/texts/hero.mdx'\nimport Bottom from '@lekoarts/gatsby-theme-minimal-blog/src/texts/bottom.mdx'\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      {/* <List>\n        <Bottom />\n      </List> */}\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","Text","id","component","Error","_missingMdxReference","React","children","sx","fontSize","fontWeight","color","wrapper","MDXLayout","_ref","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","jsx","Layout","visuallyHidden","mb","mt","variant","Hero","Title","text","Link","to","replaceSlashes","Listing","showTags","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","a","name","post","Box","title","date","ItemTags","className","BlogListItem","description","pathname","image","canonicalUrl","site","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix"],"sourceRoot":""}