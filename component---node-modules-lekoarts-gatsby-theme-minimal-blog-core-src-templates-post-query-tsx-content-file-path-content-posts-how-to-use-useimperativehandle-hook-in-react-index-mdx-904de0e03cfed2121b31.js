"use strict";(self.webpackChunkdev_flavoured_blog=self.webpackChunkdev_flavoured_blog||[]).push([[893],{4765:function(e,t,n){n.d(t,{F:function(){return u},Z:function(){return p}});var l=n(7294),r=n(8733),a=n(795),o=n(1322),c=n(6799),i=n(8871);var m=e=>{let{post:t}=e;return null};const s=["16px","8px","4px"].map((e=>"rgba(0, 0, 0, 0.1) 0px "+e+" "+e+" 0px"));var d=e=>{let{data:{post:t},children:n}=e;return(0,r.tZ)(o.Z,null,(0,r.tZ)(a.X6,{as:"h1",variant:"styles.h1"},t.title),(0,r.tZ)("p",{sx:{color:"secondary",mt:3,a:{color:"secondary"},fontSize:[1,1,2]}},(0,r.tZ)("time",null,t.date),t.tags&&(0,r.tZ)(l.Fragment,null," — ",(0,r.tZ)(c.Z,{tags:t.tags})),t.timeToRead&&" — ",t.timeToRead&&(0,r.tZ)("span",null,t.timeToRead," min read")),(0,r.tZ)("section",{sx:{my:5,".gatsby-resp-image-wrapper":{my:[4,4,5],borderRadius:"4px",boxShadow:s.join(", "),".gatsby-resp-image-image":{borderRadius:"4px"}},variant:"layout.content"}},n),(0,r.tZ)(m,{post:t}))};const u=e=>{var t,n,l;let{data:{post:a}}=e;return(0,r.tZ)(i.Z,{title:a.title,description:a.description?a.description:a.excerpt,image:a.banner?null===(t=a.banner)||void 0===t||null===(n=t.childImageSharp)||void 0===n||null===(l=n.resize)||void 0===l?void 0:l.src:void 0,pathname:a.slug,canonicalUrl:a.canonicalUrl})};function p(e){let{...t}=e;return l.createElement(d,t)}},6799:function(e,t,n){var l=n(8733),r=n(7294),a=n(1883),o=n(3494),c=n(9706);t.Z=e=>{let{tags:t}=e;const{tagsPath:n,basePath:i}=(0,o.Z)();return(0,l.tZ)(r.Fragment,null,t.map(((e,t)=>(0,l.tZ)(r.Fragment,{key:e.slug},!!t&&", ",(0,l.tZ)(a.Link,{sx:e=>{var t;return{...null===(t=e.styles)||void 0===t?void 0:t.a}},to:(0,c.Z)("/"+i+"/"+n+"/"+e.slug)},e.name)))))}},8871:function(e,t,n){var l=n(7294),r=n(1883),a=n(4232);t.Z=e=>{let{title:t="",description:n="",pathname:o="",image:c="",children:i=null,canonicalUrl:m=""}=e;const s=(0,a.Z)(),{siteTitle:d,siteTitleAlt:u,siteUrl:p,siteDescription:E,siteImage:f,author:g,siteLanguage:v}=s,w={title:t?t+" | "+d:u,description:n||E,url:""+p+(o||""),image:""+p+(c||f)};return l.createElement(l.Fragment,null,l.createElement("html",{lang:v}),l.createElement("title",null,w.title),l.createElement("meta",{name:"description",content:w.description}),l.createElement("meta",{name:"image",content:w.image}),l.createElement("meta",{property:"og:title",content:w.title}),l.createElement("meta",{property:"og:url",content:w.url}),l.createElement("meta",{property:"og:description",content:w.description}),l.createElement("meta",{property:"og:image",content:w.image}),l.createElement("meta",{property:"og:type",content:"website"}),l.createElement("meta",{property:"og:image:alt",content:w.description}),l.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),l.createElement("meta",{name:"twitter:title",content:w.title}),l.createElement("meta",{name:"twitter:url",content:w.url}),l.createElement("meta",{name:"twitter:description",content:w.description}),l.createElement("meta",{name:"twitter:image",content:w.image}),l.createElement("meta",{name:"twitter:image:alt",content:w.description}),l.createElement("meta",{name:"twitter:creator",content:g}),l.createElement("meta",{name:"gatsby-theme",content:"@lekoarts/gatsby-theme-minimal-blog"}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"32x32",href:(0,r.withPrefix)("/favicon-32x32.png")}),l.createElement("link",{rel:"icon",type:"image/png",sizes:"16x16",href:(0,r.withPrefix)("/favicon-16x16.png")}),l.createElement("link",{rel:"apple-touch-icon",sizes:"180x180",href:(0,r.withPrefix)("/apple-touch-icon.png")}),m?l.createElement("link",{rel:"canonical",href:m}):null,i)}},3327:function(e,t,n){n.r(t),n.d(t,{Head:function(){return c.F},default:function(){return i}});var l=n(7294),r=n(1151);function a(e){const t=Object.assign({h2:"h2",p:"p",code:"code",pre:"pre",ul:"ul",li:"li",a:"a"},(0,r.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.h2,null,"useImperativeHandle 소개"),"\n",l.createElement(t.p,null,"리액트를 사용하는 개발자라면 상위 컴포넌트에서 하위 컴포넌트의 데이터에 접근하지는 못한다는 점을 잘 알 거예요."),"\n",l.createElement(t.p,null,"함수를 ",l.createElement(t.code,null,"prop"),"으로 하위 컴포넌트에 전달한 다음 해당 함수를 통해 접근하는 방법이 있긴 하지만, 꽤 번거롭기도 하거니와 100% 원하는 방식을 구현하기도 어렵다는 단점이 있죠."),"\n",l.createElement(t.p,null,"하지만 방법이 아예 없는 건 아니에요. ",l.createElement(t.code,null,"useImperativeHandle")," 훅을 사용하면 상위 컴포넌트에서 하위 컴포넌트를 직접 다룰 수 있으니까요."),"\n",l.createElement(t.h2,null,"useImperativeHandle 사용 방법"),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"useImperativeHandle"),"를 사용하기 위해서는 ",l.createElement(t.code,null,"forwardRef"),"가 무엇인지 알아야 하는데, 여기서는 설명하지 않을게요. 만일 ",l.createElement(t.code,null,"forwardRef"),"를 모른다면 우선 ",l.createElement(t.code,null,"forwardRef"),"의 사용법을 확인하고 오시는 것을 추천해요."),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"useImperativeHandle"),"는 ",l.createElement(t.code,null,"forwardRef"),"와 함께 하위 컴포넌트에서 사용하는 훅이에요. ",l.createElement(t.code,null,"useImperativeHandle"),"는 세 개의 속성을 받아서 사용해요."),"\n",l.createElement("br"),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"useImperativeHandle(ref, createHandle, dependencies?)\n")),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"첫 번째 속성에는 ",l.createElement(t.code,null,"forwardRef"),"를 통해 상위 컴포넌트에서 받아 온 ",l.createElement(t.code,null,"ref"),"를 할당해요."),"\n",l.createElement(t.p,null,"두 번째 속성에는 상위 컴포넌트에서 받아 온 ",l.createElement(t.code,null,"ref"),"에 할당할 데이터를 반환하는 함수를 할당해요. 반환하는 데이터는 꼭 메서드가 아니어도 괜찮아요. 참고로 여기서 '",l.createElement(t.code,null,"ref"),"에 할당한다'라는 표현은 ",l.createElement(t.code,null,"useImperativeHandle")," 사용법의 이해를 좀 더 쉽게 만들기 위한 것일 뿐, 정확한 표현이라고 볼 수는 없어요. 리액트 공식 문서에서는 handle을 ",l.createElement(t.code,null,"ref"),"에 나타내는 것이라고 표현하고 있거든요."),"\n",l.createElement(t.p,null,"세 번째 속성에는 다른 리액트 훅과 마찬가지로 의존성 데이터 배열을 할당해요. 다만, 다른 훅과는 달리 ",l.createElement(t.code,null,"useImperativeHandle"),"을 사용할 때는 이 속성을 할당하지 않는 경우가 많은 듯해요. 물론 사용 방식에 따라 다르겠지만요."),"\n",l.createElement(t.p,null,"아래 코드는 ",l.createElement(t.code,null,"useImperativeHandle"),"를 사용한 예시 코드예요. ",l.createElement(t.code,null,"Select.tsx"),"가 상위 컴포넌트, ",l.createElement(t.code,null,"DropdownList.tsx"),"가 하위 컴포넌트고요."),"\n",l.createElement(t.p,null,"이 코드와 함께 ",l.createElement(t.code,null,"useImperativeHandle"),"의 사용법을 알아볼게요."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-typescript"},"// Select.tsx\n\nimport { useRef } from 'react'\nimport DropdownList from './DropdownList'\n\ninterface DropdownListRefs {\n  get: (idx: number) => HTMLLIElement\n  setDropdownPosition: () => void\n}\n\nfunction Select() {\n  const dropdownListRefs = useRef<DropdownListRefs>(null)\n\n  // useImperativeHandle 훅으로 받아 온 메서드를 호출하는 예시\n  const optionItem = dropdownListRefs.current?.get(2)\n  optionItem?.classList.add('focus')\n  dropdownListRefs.current?.setDropdownPosition()\n\n  return (\n    <div>\n      <DropdownList ref={dropdownListRefs} />\n    </div>\n  )\n}\n\nexport default Select\n")),"\n",l.createElement("br"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-typescript"},"// DropdownList.tsx\nimport { forwardRef, useImperativeHandle, useRef } from 'react'\n\nconst DropdownList = forwardRef(function DropdownList() {\n  const optionRefs = useRef<Map<number, HTMLLIElement>>(new Map())\n  const dropdownRefs = useRef<HTMLDivElement>(null)\n\n  useImperativeHandle(ref, () => ({\n    get: (idx: number) => optionRefs.current.get(idx),\n    setDropdownPosition: () => {\n      if (dropdownRefs.current) {\n        // DropdownList 길이가 화면의 하단을 넘어가서 잘려 보이게 될 경우 DropdownList를 위쪽으로 보이게 하는 로직.\n        // 코드 자체에 오류가 있을 수 있지만 이 글에서 설명하려는 맥락과는 관계없기에 자세히 살펴보지 않았어요. 물론 여러분도 살펴볼 필요가 없어요.\n        const rect = dropdownRefs.current.getBoundingClientRect()\n        const isReverse = rect.bottom > window.innerHeight\n        isReverse ? (dropdownRefs.current.style.bottom = '0') : (dropdownRefs.current.style.top = '3.2rem')\n      }\n    },\n  }))\n\n  return (\n    <div ref={dropdownRefs}>\n      <ul>\n        {data.map((item, idx) => {\n          const { value, label } = item\n\n          return (\n            <li\n              key={value}\n              // put in all li tags that are created by a map method to ref\n              ref={node => {\n                node ? optionRefs.current.set(idx, node) : optionRefs.current.delete(idx)\n              }}\n            >\n              {label}\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n})\n\nexport default DropdownList\n")),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"여기서는 ",l.createElement(t.code,null,"get"),"을 통해 상위 컴포넌트에서 ",l.createElement(t.code,null,"optionRefs"),"에 할당된 복수의 ",l.createElement(t.code,null,"li")," 요소 중 하나를 선택해 사용할 수 있어요. ",l.createElement(t.code,null,"dropdownListRefs.current?.get(2)"),"를 호출하면 ",l.createElement(t.code,null,"dropdownListRefs"),"에서 가지고 있는 여러 개의 ",l.createElement(t.code,null,"li")," 요소 중 세 번째 요소를 ",l.createElement(t.code,null,"optionItem")," 변수에 할당하죠."),"\n",l.createElement(t.p,null,"이렇게 상위 컴포넌트에서 받아 온 ",l.createElement(t.code,null,"li")," 요소의 속성을 바꿀 수도 있어요. 여기서는 ",l.createElement(t.code,null,"li")," 요소에 포커스를 주었어요."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-typescript"},"const optionItem = dropdownListRefs.current?.get(2)\noptionItem?.classList.add('focus')\n")),"\n",l.createElement(t.p,null,"꼭 하위 컴포넌트의 데이터를 상위 컴포넌트로 끌어오는 방식으로만 사용하지 않아도 돼요. 하위 컴포넌트의 특정 요소를 상위 컴포넌트에서 직접 제어하는 방식으로 사용할 수도 있어요."),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"setDropdownPosition"),"은 하위 컴포넌트에 있는 ",l.createElement(t.code,null,"dropdownRefs")," 요소의 ",l.createElement(t.code,null,"style")," 속성을 상위 컴포넌트에서 변경하고 있어요."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-typescript"},"dropdownListRefs.current?.setDropdownPosition()\n")),"\n",l.createElement(t.p,null,"이와 같이 ",l.createElement(t.code,null,"useImperativeHandle"),"를 사용하면 하위 컴포넌트를 상위 컴포넌트에서 원하는 방식으로 제어할 수 있지만, 그만큼 로직의 흐름을 알아보기 어려워질 수 있어요."),"\n",l.createElement("br"),"\n",l.createElement(t.h2,null,"참고 자료"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://react.dev/reference/react/useImperativeHandle"},"useImperativeHandle")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://velog.io/@jay/useImperativeHandle-%EB%96%A0%EB%A8%B9%EC%97%AC%EB%93%9C%EB%A6%BD%EB%8B%88%EB%8B%A4"},"useImperativeHandle 떠먹여드립니다.")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://velog.io/@young_mason/useImperativeHandle"},"[React] useImperativeHandle hook으로 하위 컴포넌트의 상태 관리하기")),"\n"))}var o=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?l.createElement(t,e,l.createElement(a,e)):a(e)},c=n(4765);function i(e){return l.createElement(c.Z,e,l.createElement(o,e))}c.Z}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-how-to-use-useimperativehandle-hook-in-react-index-mdx-904de0e03cfed2121b31.js.map