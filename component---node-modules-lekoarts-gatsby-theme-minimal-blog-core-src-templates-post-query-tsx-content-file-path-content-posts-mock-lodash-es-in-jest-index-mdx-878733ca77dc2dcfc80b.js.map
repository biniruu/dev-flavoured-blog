{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-mock-lodash-es-in-jest-index-mdx-878733ca77dc2dcfc80b.js","mappings":"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","sources":["webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://dev-flavoured-blog/./content/posts/mock-lodash-es-in-jest/index.mdx","webpack://dev-flavoured-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    pre: \"pre\",\n    br: \"br\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"이 방법은 lodash-es method를 사용하는 파일을 테스트할 때 발생하는 에러를 확실히 해결해줘요. 그렇지만 정확한 또는 추천할 만한 방법인지는 확실하지 않아요.\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"리액트에서 \", React.createElement(_components.code, null, \"debounce\"), \"를 사용한 컴포넌트를 jest로 테스트하다 문제가 발생했어요.\"), \"\\n\", React.createElement(_components.p, null, \"이 문제를 다룬 글을 찾기가 어려워서 해결하는 데 시간이 꽤 많이 들더라고요.\"), \"\\n\", React.createElement(_components.p, null, \"저와 같은 상황을 마주쳤다면 이 글이 도움이 될 거라 생각해요.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, null, \"에러 발생\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-typescript\"\n  }, \"// Searchbar.tsx\\n\\nimport { debounce } from 'lodash-es'\\nimport type { ChangeEvent } from 'react'\\n\\nimport useNavFunc from 'hooks/useNavFunc'\\n\\nexport function Searchbar() {\\n  const { searchParams, replace, pathname } = useNavFunc()\\n\\n  const handleSearch = debounce((e: ChangeEvent<HTMLInputElement>) => {\\n    const params = new URLSearchParams(searchParams)\\n    params.set('page', '1')\\n    e.target.value ? params.set('search', e.target.value) : params.delete('search')\\n    replace(`${pathname}?${params.toString()}`)\\n  })\\n\\n  return (...)\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-typescript\"\n  }, \"// Searchbar.test.tsx\\n\\nimport { fireEvent, render, screen } from '@testing-library/react'\\nimport type { LoDashStatic } from 'lodash'\\nimport type { ChangeEvent } from 'react'\\n\\nimport Searchbar from '@components/searchbar/Searchbar'\\n\\nconst replace = jest.fn()\\n\\njest.mock('hooks/useNavFunc', () => ({\\n  __esModule: true,\\n  default: () => ({\\n    searchParams: '',\\n    replace,\\n    pathname: 'test',\\n  }),\\n}))\\n\\n// lodash-es를 mocking하는 부분\\njest.mock('lodash-es', () => {\\n  return {\\n    debounce: jest.fn()\\n  }\\n})\\n\\ndescribe('Searchbar component', () => {\\n  test('should update input value and URL when user types in search input', () => {\\n    render(<Searchbar />)\\n    const input = screen.getByTestId(...)\\n    fireEvent.change(input, { target: { value: 'hello' } })\\n\\n    expect(replace).toHaveBeenCalledWith('test?page=1&search=hello')\\n  })\\n})\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\"), \"\\n\", React.createElement(_components.p, null, \"Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\"), \"\\n\", React.createElement(_components.p, null, \"By default \\\"node_modules\\\" folder is ignored by transformers.\"), \"\\n\", React.createElement(_components.p, null, \"Here's what you can do:\\n...\"), \"\\n\", React.createElement(_components.p, null, \"Details:\"), \"\\n\", React.createElement(_components.p, null, \"/Users/biniruu/WebDev/admin-dashboard-nextjs14/node_modules/lodash-es/lodash.js:10\", React.createElement(_components.br), \"\\n\", \"export { default as add } from './add.js';\", React.createElement(_components.br), \"\\n\", \"^^^^^^\"), \"\\n\", React.createElement(_components.p, null, \"SyntaxError: Unexpected token 'export'\"), \"\\n\", React.createElement(_components.p, null, \"...\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"에러를 해결하려고 테스트 코드에 별별 방법을 써봐도 효과가 없을 거예요.\"), \"\\n\", React.createElement(_components.p, null, \"대신 jest 설정 파일에서 \", React.createElement(_components.code, null, \"moduleNameMapper\"), \" 옵션에 \", React.createElement(_components.code, null, \"'lodash-es': 'lodash'\"), \"를 추가해보세요.\"), \"\\n\", React.createElement(_components.p, null, \"에러가 사라질 거예요.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-typescript\"\n  }, \"// jest.config.ts\\n\\nmoduleNameMapper: {\\n  'lodash-es': 'lodash'\\n}\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, null, \"mocking 한 debounce로 감싼 함수가 실행되지 않는 문제\"), \"\\n\", React.createElement(_components.p, null, \"컴포넌트 파일에서 \", React.createElement(_components.code, null, \"replace\"), \"가 실행되는지 테스트하고 싶었는데, \", React.createElement(_components.code, null, \"debounce\"), \"를 잘못된 방식으로 mocking 했더니 \", React.createElement(_components.code, null, \"replace\"), \"가 실행되지 않는 문제가 발생했어요.\"), \"\\n\", React.createElement(_components.p, null, \"테스트 코드에서 \", React.createElement(_components.code, null, \"lodash-es\"), \"를 mocking한 부분을 살펴보세요.\"), \"\\n\", React.createElement(_components.p, null, \"컴포넌트 파일에서 \", React.createElement(_components.code, null, \"debounce\"), \"로 감싼 함수 부분을 테스트 파일에서 mocking한 \", React.createElement(_components.code, null, \"debounce\"), \"가 반영하지 못하고 있어요.\"), \"\\n\", React.createElement(_components.p, null, \"컴포넌트 파일에서는 \", React.createElement(_components.code, null, \"debounce\"), \"가 감싼 함수에서 \", React.createElement(_components.code, null, \"replace\"), \"를 실행하는데, 그 함수 부분을 테스트 코드에서 반영하지 못하고 있으니 \", React.createElement(_components.code, null, \"toHaveBeenCalledWith\"), \"에서 테스트가 실패할 수밖에 없죠.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"expect(jest.fn()).toHaveBeenCalledWith(...expected)\"), \"\\n\", React.createElement(_components.p, null, \"Expected: \\\"test?page=1&search=hello\\\"\"), \"\\n\", React.createElement(_components.p, null, \"Number of calls: 0\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"문제가 되는 \", React.createElement(_components.code, null, \"lodash-es\"), \" mocking 부분을 다음과 같이 바꿨더니 의도한 대로 테스트가 동작했어요.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-typescript\"\n  }, \"import type { LoDashStatic } from 'lodash'\\n\\njest.mock('lodash-es', () => {\\n  const originalModule: LoDashStatic = jest.requireActual('lodash-es')\\n\\n  return {\\n    ...originalModule,\\n    debounce: (fn: ChangeEvent<HTMLInputElement>) => fn,\\n  }\\n})\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, null, \"마무리\"), \"\\n\", React.createElement(_components.p, null, \"이제 전체 테스트 코드를 확인하면서 참고할 만한 부분을 찾아 수정해보세요.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-typescript\"\n  }, \"// Searchbar.test.tsx\\n\\nimport { fireEvent, render, screen } from '@testing-library/react'\\nimport type { LoDashStatic } from 'lodash'\\nimport type { ChangeEvent } from 'react'\\n\\nimport Searchbar from '@components/searchbar/Searchbar'\\n\\nconst replace = jest.fn()\\n\\njest.mock('hooks/useNavFunc', () => ({\\n  __esModule: true,\\n  default: () => ({\\n    searchParams: '',\\n    replace,\\n    pathname: 'test',\\n  }),\\n}))\\n\\njest.mock('lodash-es', () => {\\n  const originalModule: LoDashStatic = jest.requireActual('lodash-es')\\n\\n  return {\\n    ...originalModule,\\n    debounce: (fn: ChangeEvent<HTMLInputElement>) => fn,\\n  }\\n})\\n\\ndescribe('Searchbar component', () => {\\n  test('should update input value and URL when user types in search input', () => {\\n    render(<Searchbar />)\\n    const input = screen.getByTestId(...)\\n    fireEvent.change(input, { target: { value: 'hello' } })\\n\\n    expect(replace).toHaveBeenCalledWith('test?page=1&search=hello')\\n  })\\n})\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/biniruu/WebDev/dev-flavoured-blog/content/posts/mock-lodash-es-in-jest/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","blockquote","p","code","h2","pre","br","_provideComponents","components","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}